/*!
 *  @file task1.c
 *  @brief Runs the states associated with task 1 as described in its FSM.
 *
 *  Created on: Jun 9, 2024
 */

#include <task2.h>

void main_task2(TASK2* task, INTERTASK_VARS* intertask_vars)
{
	if(task->state == 0){
		state0_task2(task, intertask_vars);
	}
	else if(task->state == 1){
		state1_task2(task, intertask_vars);
	}
	else if(task->state == 2){
		state2_task2(task, intertask_vars);
	}
	else if(task->state == 3){
		state2_task2(task, intertask_vars);
	}
}

void state0_task2(TASK2* task, INTERTASK_VARS* intertask_vars)
{
	return 0;
}

void state1_task2(TASK2* task, INTERTASK_VARS* intertask_vars)
{
	return 0;
}

void state2_task2(TASK2* task, INTERTASK_VARS* intertask_vars)
{
	return 0;
}

void state3_task1(TASK2* task, INTERTASK_VARS* intertask_vars)
{
	return 0;
}

void state4_task2(TASK2* task, INTERTASK_VARS* intertask_vars)
{
	return 0;
}

void state5_task2(TASK2* task, INTERTASK_VARS* intertask_vars)
{
	return 0;
}

void state6_task1(TASK2* task, INTERTASK_VARS* intertask_vars)
{
	return 0;
}

void state7_task2(TASK2* task, INTERTASK_VARS* intertask_vars)
{
	return 0;
}

void state8_task1(TASK2* task, INTERTASK_VARS* intertask_vars)
{
	return 0;
}

void state9_task1(TASK2* task, INTERTASK_VARS* intertask_vars)
{
	return 0;
}




